今天首先看ISceneNode.h文件，这个文件内容相比以前丰富多了。实现了场景结点的接口。对于一个场景结点，定义了结点名字、各转换矩阵、父结点指针、子结点存储链表、结点动画存储链表、结点id、结点能否访问等属性。并根据这些成员实现了一些方法，设置、获取成员变量的值，渲染前后的操作等。
 
接着看IAnimatedMeshSceneNode.h，在这个文件里实现了继承自IsceneNode类的IAnimatedMeshNode接口类。该类声明了几个方法：设置当前动画帧数、设置动画循环之间的帧数、设置动画的显示速度等。
 
在IBillboardSceneNode.h中，完成了广告牌类。广告牌的最大特点在于：进行观察时，不管处于哪个方向，观察到的网格都面向摄像机的正面。它通常被用于爆炸，火焰，耀光，粒子，等类似效果上。
 
在IBspTreeSceneNode.h中，实现了一个二叉空间分割书（BSP树）。使用该类的方法将使渲染速度达到最快。不过引擎作者在该0.1版引擎中注释：该bsp树还有一些小问题未解决，需要注意。
 
在ICameraSceneNode.h中，声明了摄像机类。该类声明了有关摄像机的各种操作方法。在该文件里定义了一个结构体——平截头体，用来裁定有效视野的范围。
 
在ILightSceneNode.h中，实现了一个描述光源的场景结点类。你可以通过使结点可见或不见属性来变换光源的开和关，通过普通场景结点动画发生器让它成为动画。
 
经过之前的各个文件的实现，集合而成的ISceneManager.h中，实现了场景结点管理器。这个场景管理器管理场景结点、网格资源、摄像机等其他东西。只有在这里才能创建所有场景结点。有许多用途的场景结点：
——室内渲染场景结点OctTree(addOctTreeSceneNode())，
——BspTree(addBspTreeSceneNode())，
——不同的摄像机场景结点(addCameraSceneNode(),addCameraSceneNodeMaya())，
——场景结点(addLightSceneNode())，
——广告牌(addBillboardSceneNode())等等。一个场景结点是一个在阶层场景图里的结点。每个场景结点都可能有子结点即其他场景结点。子结点相对于他们的父结点的位置移动。如果父结点是一个不可见的结点，那么它的子结点同样不可见。在这个方法里，它可以轻松给一辆移动的汽车易附上一盏灯，或在行进的舰船上的一个移动的平台上放置行走的字符等等等等。还定义了一个描述渲染时间的枚举类型变量。
 
至此include\scene下的文件全部搞定。
 
OVER！今天解决7个代码文件，还剩120个。